hom_rate<-c(8.6,8.3,8.5,8.7,9.4,9.8,9.3,9.5,9,8.2,7.4,6.8,6.3,5.7,5.5,5.6,5.6,
5.7,5.5,5.6,5.8,5.7,5.4,5,4.8,4.7,4.7,4.5,4.4,4.9,5.4,5.3,5,5)
ggplot(,aes(x=factor(year),y=hom_rate, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x=element_text(angle=45, vjust=-.1))
year<-c(1986:2019)
hom_rate<-c(8.6,8.3,8.5,8.7,9.4,9.8,9.3,9.5,9,8.2,7.4,6.8,6.3,5.7,5.5,5.6,5.6,
5.7,5.5,5.6,5.8,5.7,5.4,5,4.8,4.7,4.7,4.5,4.4,4.9,5.4,5.3,5,5)
ggplot(,aes(x=factor(year),y=hom_rate, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x=element_text(angle=45, vjust=-5))
year<-c(1986:2019)
hom_rate<-c(8.6,8.3,8.5,8.7,9.4,9.8,9.3,9.5,9,8.2,7.4,6.8,6.3,5.7,5.5,5.6,5.6,
5.7,5.5,5.6,5.8,5.7,5.4,5,4.8,4.7,4.7,4.5,4.4,4.9,5.4,5.3,5,5)
ggplot(,aes(x=factor(year),y=hom_rate, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x=element_text(angle=45, vjust=-.0001))
year<-c(1986:2019)
hom_rate<-c(8.6,8.3,8.5,8.7,9.4,9.8,9.3,9.5,9,8.2,7.4,6.8,6.3,5.7,5.5,5.6,5.6,
5.7,5.5,5.6,5.8,5.7,5.4,5,4.8,4.7,4.7,4.5,4.4,4.9,5.4,5.3,5,5)
ggplot(,aes(x=factor(year),y=hom_rate, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x=element_text(angle=45, vjust=-.01))
year<-c(1986:2019)
hom_rate<-c(8.6,8.3,8.5,8.7,9.4,9.8,9.3,9.5,9,8.2,7.4,6.8,6.3,5.7,5.5,5.6,5.6,
5.7,5.5,5.6,5.8,5.7,5.4,5,4.8,4.7,4.7,4.5,4.4,4.9,5.4,5.3,5,5)
ggplot(,aes(x=factor(year),y=hom_rate, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x=element_text(angle=45, vjust=-.05))
year<-c(1986:2019)
hom_rate<-c(8.6,8.3,8.5,8.7,9.4,9.8,9.3,9.5,9,8.2,7.4,6.8,6.3,5.7,5.5,5.6,5.6,
5.7,5.5,5.6,5.8,5.7,5.4,5,4.8,4.7,4.7,4.5,4.4,4.9,5.4,5.3,5,5)
ggplot(,aes(x=factor(year),y=hom_rate, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x=element_text(angle=45, vjust=-.25))
year<-c(1986:2019)
hom_rate<-c(8.6,8.3,8.5,8.7,9.4,9.8,9.3,9.5,9,8.2,7.4,6.8,6.3,5.7,5.5,5.6,5.6,
5.7,5.5,5.6,5.8,5.7,5.4,5,4.8,4.7,4.7,4.5,4.4,4.9,5.4,5.3,5,5)
ggplot(,aes(x=factor(year),y=hom_rate, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x=element_text(angle=45, vjust=-.15))
year<-c(1986:2019)
hom_rate<-c(8.6,8.3,8.5,8.7,9.4,9.8,9.3,9.5,9,8.2,7.4,6.8,6.3,5.7,5.5,5.6,5.6,
5.7,5.5,5.6,5.8,5.7,5.4,5,4.8,4.7,4.7,4.5,4.4,4.9,5.4,5.3,5,5)
ggplot(,aes(x=factor(year),y=hom_rate, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x=element_text(angle=45))
year<-c(1986:2019)
hom_rate<-c(8.6,8.3,8.5,8.7,9.4,9.8,9.3,9.5,9,8.2,7.4,6.8,6.3,5.7,5.5,5.6,5.6,
5.7,5.5,5.6,5.8,5.7,5.4,5,4.8,4.7,4.7,4.5,4.4,4.9,5.4,5.3,5,5)
ggplot(,aes(x=factor(year),y=hom_rate, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=-.1))
year<-c(1986:2019)
hom_rate<-c(8.6,8.3,8.5,8.7,9.4,9.8,9.3,9.5,9,8.2,7.4,6.8,6.3,5.7,5.5,5.6,5.6,
5.7,5.5,5.6,5.8,5.7,5.4,5,4.8,4.7,4.7,4.5,4.4,4.9,5.4,5.3,5,5)
ggplot(,aes(x=factor(year),y=hom_rate, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=-.01))
year<-c(1986:2019)
hom_rate<-c(8.6,8.3,8.5,8.7,9.4,9.8,9.3,9.5,9,8.2,7.4,6.8,6.3,5.7,5.5,5.6,5.6,
5.7,5.5,5.6,5.8,5.7,5.4,5,4.8,4.7,4.7,4.5,4.4,4.9,5.4,5.3,5,5)
ggplot(,aes(x=factor(year),y=hom_rate, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x=element_text(angle=45, hjust=1))
year<-c(1986:2019)
hom_rate<-c(8.6,8.3,8.5,8.7,9.4,9.8,9.3,9.5,9,8.2,7.4,6.8,6.3,5.7,5.5,5.6,5.6,
5.7,5.5,5.6,5.8,5.7,5.4,5,4.8,4.7,4.7,4.5,4.4,4.9,5.4,5.3,5,5)
ggplot(,aes(x=factor(year),y=hom_rate, group=1)) +
geom_line() +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
theme(axis.text.x=element_text(angle=45, hjust=1))
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE)
packages<-c("ggplot2","tidyverse","DescTools","knitr")
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
set.seed(1234)
tempdata<-data.frame(height=rnorm(100000, mean=69.1))
ggplot(tempdata, aes(x=height))+geom_histogram(binwidth=.25)
tempdata<-data.frame(arrests<-(rnorm(10000, mean=1)^2))
ggplot(tempdata, aes(x=arrests))+geom_histogram(binwidth=.25)
tempdata<-data.frame(ageatdeath<-rbeta(10000,100,20)*90)
ggplot(tempdata, aes(x=ageatdeath))+geom_histogram(binwidth=.25)
set.seed(08302021)
df<-data.frame(group<-c(rep('sd=05',1000), rep('sd=10',1000),
rep('sd=15',1000), rep('sd=20',1000)),
values<-c(rnorm(1000,25,5),rnorm(1000,25,10),
rnorm(1000,25,15),rnorm(1000,25,20)))
ggplot(df, aes(x=values, fill=group)) +
geom_histogram(alpha=0.4, position='identity', binwidth=2)
sent_length<-c(36,38,39,47,50,51,51,53,55,55,56,57,60,62,63,64,64,66,
67,68,69,70,70,70,71,75,78,79,80,80,81,83,85,86,87,89,
95,98,99,99)
length(sent_length)
## Manual Computation
xbar1<-(sum(sent_length)/length(sent_length))
## Sum() function adds together all values in the vector
xbar1
## Automatic Computation
xbar2<-mean(sent_length)
xbar2
sent_length<-sample(sent_length,40,replace=FALSE)
sent_length ## No longer in order!
## Manual Computation
sent_length<-sort(sent_length) ## Have to re-sort or I will get the wrong value
sent_length
(length(sent_length)+1)/2 ## Obtain the median position
median1<-(sent_length[20]+sent_length[21])/2
median1
## Automatic Computation
median2<-median(sent_length)
median2
table(sent_length)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(sent_length)
max(sent_length)-min(sent_length)
(trunc((length(sent_length)+1)/2)+1)/2
## Manual Computation
## 25th Percentile Value
q1<-(sent_length[10]+sent_length[11])/2
## 75th percentile Value
q3<-(sent_length[30]+sent_length[29])/2
## IQR Value
q3-q1
## Automatic Computation
IQR(sent_length)
## Manual Computation
## 25th Percentile Value
q1<-(sent_length[10]+sent_length[11])/2
## 75th percentile Value
q3<-(sent_length[30]+sent_length[29])/2
## IQR Value
q3-q1
## Automatic Computation
IQR(sent_length)
test<-c(1,1,1,1,2,2,2,2,9,9)
IQR(test)
test<-c(1,2,2,3,3,3,4,4,4,4)
IQR(test)
?IQR
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE)
packages<-c("ggplot2","tidyverse","DescTools","knitr")
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
library(swirl)
swirl()
ls
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(pants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
Sys.Date()
mean(c(2,4,5))
submit()
submit()
boring_function('My first function!')
boring_function
submit()
submit()
my_mean(c(4,5,10))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
help
answer
submit()
submit()
skip
complete()
skip()
remainder(5)
remainder(11,5)
remainder(divisor=11, num=5)
remainder(4, num=2)
remainder(4, div=2)
args(remainder)
submit()
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1])},c(8,4,0))
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is", "fun")
paste("Programming", "is", "fun!")
submit()
skip()
telgram(crap)
telegram(crap)
telegram("crap")
skip()
mad_libs("Here","pooping","Sam")
skip()
"I" %p% "love" %p% "R"
"I" %p% "love" %p% "R!"
x<-100
x
x<-300
x
knitr::opts_chunk$set(echo = TRUE)
obs<-c(1:8)
df<-data.frame(n, s, m, obs)
knitr::opts_chunk$set(echo = TRUE)
n<-c(1,1,3,2,3,4,2,3)
s<-c(3,4,3,5,5,6,3,5)
m<-c(6,7,10,5,5,8,10,12)
n_xbar<-sum(n)/length(n)
s_xbar<-sum(s)/length(s)
m_xbar<-sum(m)/length(m)
grand_xbar<-(sum(n)+sum(s)+sum(m))/(length(n)+length(s)+length(m))
n_sq<-n^2
s_sq<-s^2
m_sq<-m^2
ss_ttl<-(sum(n_sq)+sum(s_sq)+sum(m_sq))- ((length(n_sq)+length(s_sq)+length(m_sq))*(grand_xbar^2))
ss_bet<-((length(n)*n_xbar^2)+(length(s)*s_xbar^2) +
(length(m)*m_xbar^2)) -
((length(n_sq)+length(s_sq)+length(m_sq))*
(grand_xbar^2))
ss_with<-(sum(n_sq)+sum(s_sq)+sum(m_sq)) -
((length(n)*n_xbar^2)+(length(s)*s_xbar^2) +
(length(m)*m_xbar^2))
ms_bet<-ss_bet/(3-1)
ms_bet
ms_with<-ss_with/((length(n)+length(s)+length(m))-3)
ms_with
ms_ttl<-ss_ttl/((length(n)+length(s)+length(m))-1)
ms_ttl
qf(.01,2,21, lower.tail = FALSE)
f_ratio<-ms_bet/ms_with
f_ratio
obs<-c(1:8)
df<-data.frame(n, s, m, obs)
df<- df %>%
gather(key="delinquent_behavior", value="delinquent_friends", n, s, m) %>%
convert_as_factor(delinquent_behavior)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
n<-c(1,1,3,2,3,4,2,3)
s<-c(3,4,3,5,5,6,3,5)
m<-c(6,7,10,5,5,8,10,12)
n_xbar<-sum(n)/length(n)
s_xbar<-sum(s)/length(s)
m_xbar<-sum(m)/length(m)
grand_xbar<-(sum(n)+sum(s)+sum(m))/(length(n)+length(s)+length(m))
n_sq<-n^2
s_sq<-s^2
m_sq<-m^2
ss_ttl<-(sum(n_sq)+sum(s_sq)+sum(m_sq))- ((length(n_sq)+length(s_sq)+length(m_sq))*(grand_xbar^2))
ss_bet<-((length(n)*n_xbar^2)+(length(s)*s_xbar^2) +
(length(m)*m_xbar^2)) -
((length(n_sq)+length(s_sq)+length(m_sq))*
(grand_xbar^2))
ss_with<-(sum(n_sq)+sum(s_sq)+sum(m_sq)) -
((length(n)*n_xbar^2)+(length(s)*s_xbar^2) +
(length(m)*m_xbar^2))
ms_bet<-ss_bet/(3-1)
ms_bet
ms_with<-ss_with/((length(n)+length(s)+length(m))-3)
ms_with
ms_ttl<-ss_ttl/((length(n)+length(s)+length(m))-1)
ms_ttl
qf(.01,2,21, lower.tail = FALSE)
f_ratio<-ms_bet/ms_with
f_ratio
obs<-c(1:8)
df<-data.frame(n, s, m, obs)
df<- df %>%
gather(key="delinquent_behavior", value="delinquent_friends", n, s, m) %>%
convert_as_factor(delinquent_behavior)
tests_plot+stat_pvalue_manual(tests, label="p.adj.signif")
tests_plot<- ggboxplot(df, x = "delinquent_behavior", y = "delinquent_friends", add = "point")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2); library(tidyverse); library(ggpubr); library(rstatix)
n<-c(1,1,3,2,3,4,2,3)
s<-c(3,4,3,5,5,6,3,5)
m<-c(6,7,10,5,5,8,10,12)
n_xbar<-sum(n)/length(n)
s_xbar<-sum(s)/length(s)
m_xbar<-sum(m)/length(m)
grand_xbar<-(sum(n)+sum(s)+sum(m))/(length(n)+length(s)+length(m))
n_sq<-n^2
s_sq<-s^2
m_sq<-m^2
ss_ttl<-(sum(n_sq)+sum(s_sq)+sum(m_sq))- ((length(n_sq)+length(s_sq)+length(m_sq))*(grand_xbar^2))
ss_bet<-((length(n)*n_xbar^2)+(length(s)*s_xbar^2) +
(length(m)*m_xbar^2)) -
((length(n_sq)+length(s_sq)+length(m_sq))*
(grand_xbar^2))
ss_with<-(sum(n_sq)+sum(s_sq)+sum(m_sq)) -
((length(n)*n_xbar^2)+(length(s)*s_xbar^2) +
(length(m)*m_xbar^2))
ms_bet<-ss_bet/(3-1)
ms_bet
ms_with<-ss_with/((length(n)+length(s)+length(m))-3)
ms_with
ms_ttl<-ss_ttl/((length(n)+length(s)+length(m))-1)
ms_ttl
qf(.01,2,21, lower.tail = FALSE)
f_ratio<-ms_bet/ms_with
f_ratio
obs<-c(1:8)
df<-data.frame(n, s, m, obs)
df<- df %>%
gather(key="delinquent_behavior", value="delinquent_friends", n, s, m) %>%
convert_as_factor(delinquent_behavior)
head(df, 2)
tests <- df %>%
pairwise_t_test(delinquent_friends~delinquent_behavior,
paired=FALSE, pool.sd=FALSE,
p.adjust.method="bonferroni",
detailed=TRUE)
tests_plot<- ggboxplot(df, x = "delinquent_behavior", y = "delinquent_friends", add = "point")
tests<-tests %>% add_xy_position(x="delinquent_behavior")
tests_plot+stat_pvalue_manual(tests, label="p.adj.signif")
## LOAD LIBRARIES
library(ggplot2)
#################################################
## INDIRECT EFFECT FIGURE FOR ASC PRESENTATION ##
#################################################
## LOAD LIBRARIES
library(ggplot2)
library(RColorBrewer)
library(forcats)
## ENTER DATA
pt.est.job<-c(0.2996931, 0.0386899, 0.1579883, 0.0746007, 0.0284142,
0.6227801, 0.0776127, 0.3159304, 0.1157015, 0.1135355)
pt.est.oth<-c(0.6481455, 0.0756333, 0.3147479, 0.1449964, 0.1127678,
1.782708,  0.1904079, 0.8367257, 0.3361184, 0.4194459)
st.err.job<-c(0.2207637, 0.0221698, 0.0566079, 0.030184,  0.030184,
0.2211268, 0.0234524, 0.0572665, 0.0319453, 0.0278192)
st.err.oth<-c(0.2211741, 0.0235918, 0.0585115, 0.0321179, 0.0275763,
0.2249067, 0.0300474, 0.0676457, 0.0404744, 0.044291)
bar.labs<-c(rep(c("Indirect Effect","Recid Risk","Trust","Wrkplc Crime",
"Depend"),2))
eff.labs.job<-c(rep(c("Involuntary"),5),rep(c("Voluntary"),5))
eff.labs.oth<-c(rep(c("Occ License"),5), rep(c("Ref Letter"),5))
## CREATE DATA FRAME - JUST JOB TRAINING CREDENTIALS
df.job<-data.frame(pt.est.job,st.err.job,bar.labs,eff.labs.job)
df.job$bar.labs<-factor(df.job$bar.labs, levels=c("Indirect Effect","Depend",
"Recid Risk","Trust",
"Wrkplc Crime"))
df.job$eff.labs<-factor(df.job$eff.labs.job, levels=c("Involuntary", "Voluntary",
"Occ License", "Ref Letter"))
## CREATE DATA FRAME - JUST OCC LICENSE AND REF LETTER CREDENTIALS
df.oth<-data.frame(pt.est.oth,st.err.oth,bar.labs,eff.labs.oth)
df.oth$bar.labs<-factor(df.oth$bar.labs, levels=c("Indirect Effect","Depend",
"Recid Risk","Trust",
"Wrkplc Crime"))
df.oth$eff.labs<-factor(df.oth$eff.labs.oth, levels=c("Involuntary", "Voluntary",
"Occ License", "Ref Letter"))
## CREATE DODGE VALUE
dodge<-position_dodge(.9)
## SET WORKING DIRECTORY FOR PLOTS
setwd('F:/My Drive/Ongoing Projects/Signaling Survey/Mixed methods paper/Drafts/Figures')
#################################################
## INDIRECT EFFECT FIGURE FOR ASC PRESENTATION ##
#################################################
## LOAD LIBRARIES
library(ggplot2)
library(RColorBrewer)
library(forcats)
## ENTER DATA
pt.est.job<-c(0.2996931, 0.0386899, 0.1579883, 0.0746007, 0.0284142,
0.6227801, 0.0776127, 0.3159304, 0.1157015, 0.1135355)
pt.est.oth<-c(0.6481455, 0.0756333, 0.3147479, 0.1449964, 0.1127678,
1.782708,  0.1904079, 0.8367257, 0.3361184, 0.4194459)
st.err.job<-c(0.2207637, 0.0221698, 0.0566079, 0.030184,  0.030184,
0.2211268, 0.0234524, 0.0572665, 0.0319453, 0.0278192)
st.err.oth<-c(0.2211741, 0.0235918, 0.0585115, 0.0321179, 0.0275763,
0.2249067, 0.0300474, 0.0676457, 0.0404744, 0.044291)
bar.labs<-c(rep(c("Indirect Effect","Recid Risk","Trust","Wrkplc Crime",
"Depend"),2))
eff.labs.job<-c(rep(c("Involuntary"),5),rep(c("Voluntary"),5))
eff.labs.oth<-c(rep(c("Occ License"),5), rep(c("Ref Letter"),5))
## CREATE DATA FRAME - JUST JOB TRAINING CREDENTIALS
df.job<-data.frame(pt.est.job,st.err.job,bar.labs,eff.labs.job)
df.job$bar.labs<-factor(df.job$bar.labs, levels=c("Indirect Effect","Depend",
"Recid Risk","Trust",
"Wrkplc Crime"))
df.job$eff.labs<-factor(df.job$eff.labs.job, levels=c("Involuntary", "Voluntary",
"Occ License", "Ref Letter"))
## CREATE DATA FRAME - JUST OCC LICENSE AND REF LETTER CREDENTIALS
df.oth<-data.frame(pt.est.oth,st.err.oth,bar.labs,eff.labs.oth)
df.oth$bar.labs<-factor(df.oth$bar.labs, levels=c("Indirect Effect","Depend",
"Recid Risk","Trust",
"Wrkplc Crime"))
df.oth$eff.labs<-factor(df.oth$eff.labs.oth, levels=c("Involuntary", "Voluntary",
"Occ License", "Ref Letter"))
## CREATE DODGE VALUE
dodge<-position_dodge(.9)
## SET WORKING DIRECTORY FOR PLOTS
## CREATE BAR PLOT (WITH ERROR BARS) - JOB TRAININGS
png('job.trng.decomp_CIs.png',
width=950, height=610)
ggplot(df.job, aes(x=bar.labs, y=pt.est.job, fill=eff.labs.job)) +
geom_bar(stat="identity", position="dodge", width=.9) +
geom_errorbar(aes(ymin=pt.est.job-(1.96*st.err.job), ymax=pt.est.job+(1.96*st.err.job)),
width=.4, size=.8, position=dodge) +
scale_fill_brewer(palette='Paired') +
theme(axis.title=element_blank()) +
theme(legend.position=c(1,1), legend.justification=c(1,1),
legend.background=element_rect(fill='white', color='black'),
legend.title=element_text(size=24),
legend.text=element_text(size=22),
axis.text=element_text(size=24)) +
labs(fill="Positive Credential") +
ylim(c(-0.15,2.25))
dev.off()
## CREATE BAR PLOT (WITHOUT ERROR BARS) - JOB TRAININGS
png('job.trng.decomp_labs.png',
width=950, height=610)
ggplot(df.job, aes(x=bar.labs, y=pt.est.job, fill=eff.labs.job)) +
geom_bar(stat="identity", position="dodge", width=.9) +
scale_fill_brewer(palette='Paired') +
geom_text(aes(label=format(pt.est.job, nsmall=2, digits=2)), size=9.5,
vjust=-0.2, color='black', position=dodge) +
theme(axis.title=element_blank()) +
theme(legend.position=c(1,1), legend.justification=c(1,1),
legend.background=element_rect(fill='white', color='black'),
legend.title=element_text(size=24),
legend.text=element_text(size=22),
axis.text=element_text(size=24)) +
labs(fill="Positive Credential") +
ylim(c(0,1.80))
dev.off()
## CREATE BAR PLOT (WITH ERROR BARS) - OCC LICENSE & REF LETTER
png('occ.rec.decomp_CIs.png',
width=950, height=610)
ggplot(df.oth, aes(x=bar.labs, y=pt.est.oth, fill=eff.labs.oth)) +
geom_bar(stat="identity", position="dodge", width=.9) +
geom_errorbar(aes(ymin=pt.est.oth-(1.96*st.err.oth), ymax=pt.est.oth+(1.96*st.err.oth)),
width=.4, size=.8, position=dodge) +
scale_fill_manual(values=c("#a1f1a1","#137f13")) +
theme(axis.title=element_blank()) +
theme(legend.position=c(1,1), legend.justification=c(1,1),
legend.background=element_rect(fill='white', color='black'),
legend.title=element_text(size=24),
legend.text=element_text(size=22),
axis.text=element_text(size=24)) +
labs(fill="Positive Credential") +
ylim(c(-0.15,2.25))
dev.off()
## CREATE BAR PLOT (WITHOUT ERROR BARS) - OCC LICENSE & REF LETTER
png('occ.ref.decomp_labs.png',
width=950, height=610)
ggplot(df.oth, aes(x=bar.labs, y=pt.est.oth, fill=eff.labs.oth)) +
geom_bar(stat="identity", position="dodge", width=.9) +
scale_fill_manual(values=c("#a1f1a1","#137f13")) +
geom_text(aes(label=format(pt.est.oth, nsmall=2, digits=2)), size=9.5,
vjust=-0.2, color='black', position=dodge) +
theme(axis.title=element_blank()) +
theme(legend.position=c(1,1), legend.justification=c(1,1),
legend.background=element_rect(fill='white', color='black'),
legend.title=element_text(size=24),
legend.text=element_text(size=22),
axis.text=element_text(size=24)) +
labs(fill="Positive Credential") +
ylim(c(0,1.80))
dev.off()
